[binaries]
c = 'arm-none-eabi-gcc'
cpp = 'arm-none-eabi-g++'
ar = 'arm-none-eabi-ar'
as = 'arm-none-eabi-as'
ld = 'arm-none-eabi-ld'
objcopy = 'arm-none-eabi-objcopy'
size = 'arm-none-eabi-size'
gdb = 'arm-none-eabi-gdb'
strip = 'arm-none-eabi-strip'

[host_machine]
system = 'none'
cpu_family = 'arm'
cpu = 'cortex-m7'
endian = 'little'

[constants]
common_args = [
    '-DSTM32F767xx',
    '-mthumb', 
    '-mcpu=cortex-m7', 
    '-mtune=cortex-m7',
    '-mfpu=fpv5-d16', 
    '-mfloat-abi=hard',
    '-fdata-sections',
    '-ffunction-sections',
    '-fno-exceptions',
    '-Wall',
    '-Wextra',
    '-Werror',
    '-flto',
    '-fstack-usage',
    '-specs=nano.specs',
    '-fmerge-all-constants',
    ]

common_link_args = [
    '-nostartfiles',
    '-mthumb', 
    '-mcpu=cortex-m7', 
    '-mfpu=fpv5-d16', 
    '-mfloat-abi=hard',
    '-Wl,-Map=app.map',
    '-Wl,--print-memory-usage',
    '-Wl,--gc-sections',
    '-specs=nano.specs',
    '-flto',
    '-lc',
    '-lm',
    '-lnosys',
    '-fmerge-all-constants',
    '-Wl,--no-warn-rwx-segments']

[built-in options]
c_args = common_args
c_link_args = common_link_args

cpp_args = common_args + ['-fno-rtti', '-fconcepts-diagnostics-depth=1', '-fno-use-cxa-atexit',]
cpp_link_args = common_link_args + ['-fno-rtti', '-fconcepts-diagnostics-depth=1']